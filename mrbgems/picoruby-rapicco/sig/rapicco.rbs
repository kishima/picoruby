class Rapicco
  COLORS: Hash[Symbol, String]

  type parser_dump_t = Array[Hash[Symbol, untyped]]

  @positions: Array[Integer]
  @rapiko: Rapicco::Sprite
  @camerlengo: Rapicco::Sprite
  @file: File
  @parser: Rapicco::Parser
  @slide: Rapicco::Slide
  @current_page: Integer
  @duration: Integer
  @interval: Float

  def initialize: (String path) -> void
  def run: () -> void
  private def render_note: (String note) -> void
  private def render_page: (Integer page) -> void
  private def render_usakame: () -> void
  private def prev_page: () -> void
  private def next_page: () -> void
  private def refresh: () -> void

  class Parser
    @lines: parser_dump_t
    @in_code_block: nil | :code | :eval

    attr_accessor align: (Symbol | String)
    attr_accessor title_font: (Symbol | String)
    attr_accessor font: (Symbol | String)
    attr_accessor bold_color: (Symbol | String)

    def initialize: () -> void
    def parse: (String raw_line) -> void
    def dump: () -> parser_dump_t
    def self.parse_attrs: (String str) -> Hash[Symbol, String]
    def self.parse_inline: (String src, Symbol base_color, Symbol | String bold_color) -> parser_dump_t
    def default_font: (String | nil str) -> (Symbol | String)
  end

  class Slide
    COLORS: Hash[Symbol, String]

    @current_page_h: Integer
    @colors: Hash[Symbol, String]
    @usakame_h: Integer

    attr_reader page_h: Integer
    attr_reader page_w: Integer
    attr_accessor bullet: Sprite
    attr_accessor code_indent: Integer
    attr_accessor line_margin: Integer

    def initialize: (?usakame_h: Integer, ?colors: Hash[Symbol, String]|nil) -> void
    def get_screen_size: () -> void
    def render_slide: (parser_dump_t lines) -> void
    def render_sprite: (Sprite sprite) -> void
    private def check_height: () -> bool
  end

  class Sprite
    type sprite_t = Hash[Symbol, Array[String]]
    type palette_t = Hash[String, Integer]

    DATA: Hash[String, sprite_t]
    PALETTE: Hash[String, palette_t]

    @data: Array[String]

    attr_accessor pos: Integer
    attr_reader width: Integer
    attr_reader height: Integer
    def initialize: (Symbol name, String author) -> void
    def show: () -> void
  end
end
